{"version":3,"sources":["components/Register.js","components/Login.js","components/Home.js","components/UserRow.js","components/Scoreboard.js","Utils/decypter.js","components/Answer.js","components/Question.js","components/Grading.js","components/LifeSaver.js","components/LinearDeterminate.js","components/Game.js","components/NotFound.js","components/Main.js","App.js","index.js"],"names":["Register","userInputHandler","passwordInputHandler","userName","password","setNewUser","setUserExists","setUserName","setPassword","useEffect","registerClick","a","user","name","console","log","axios","post","id","type","placeholder","onChange","e","target","value","required","Button","onClick","className","variant","color","Login","onClickHandler","to","Home","logoutHandler","UserRow","index","score","Scoreboard","useState","scoreboard","setScoreboard","get","res","data","map","i","base64","require","utf8","decrypter","str","bytes","decode","StyledButton","withStyles","root","backgroundColor","borderRadius","border","padding","boxShadow","marginTop","fontSize","minWidth","height","label","textTransform","Answer","answer","answerClickEvent","isAnswerVisible","question","disableButtons","innerText","disabled","option","allAnswers","length","decypter","saved","country","Question","Grading","onRateOrSkipClicking","questionNumber","setRatedNewQuestions","ratedNewQuestions","setValue","questionToSave","Object","assign","onRateHandler","patch","temp","push","grade","Box","component","mb","borderColor","Typography","Rating","size","event","newValue","LifeSaver","setLifeSaver","lifeSaver","setQuestion","setCounter","disableSaveButton","setProgress","prevCounter","counter","prev","tempAnswers","findIndex","String","indexes","tempIndex","Math","floor","random","includes","sort","b","splice","shift","removeFromAnswers","useStyles","makeStyles","width","margin","LinearDeterminate","progress","classes","LinearProgress","style","Game","setQuestionNumber","isRatingVisible","setIsRatingVisible","setIsAnswerVisible","skipOrRate","setSkipOrRate","setPrevCounter","lives","setLives","setDisableButtons","setDisableSaveButton","gameScore","setGameScore","currentQuestionIdArray","setCurrentQuestionIdArray","allSavedQuestionsId","setAllSavedQuestionsId","timer","setInterval","clearInterval","num","allSaved","allId","timeItTookToAnswer","questionId","savedUser","message","round","NotFound","Main","userExists","newUser","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.508c615d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Register({\r\n  userInputHandler,\r\n  passwordInputHandler,\r\n  userName,\r\n  password,\r\n  setNewUser,\r\n  setUserExists,\r\n  setUserName,\r\n  setPassword,\r\n}) {\r\n  useEffect(() => {\r\n    setUserName(\"\");\r\n    setPassword(\"\");\r\n  }, []);\r\n\r\n  const registerClick = async () => {\r\n    const user = {\r\n      name: userName,\r\n      password: password,\r\n    };\r\n\r\n    if (userName === \"\" || password === \"\") {\r\n      console.log(\"Username and password required\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post(\"/api/user/register\", user);\r\n      console.log(userName);\r\n      setNewUser(true);\r\n      setUserExists(true);\r\n    } catch (error) {\r\n      console.log(\"Error signing up\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 id=\"register-title\">Welcome to the best Trivia ever </h1>\r\n      <h2>Register Now!</h2>\r\n      <div id=\"register-container\">\r\n        <input\r\n          id=\"username-input-register\"\r\n          type=\"text\"\r\n          placeholder=\"Enter user name\"\r\n          onChange={(e) => userInputHandler(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          id=\"password-input-register\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          onChange={(e) => passwordInputHandler(e.target.value)}\r\n          required\r\n        />\r\n        <Button\r\n          onClick={registerClick}\r\n          className=\"scoreboard-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Login({\r\n  userInputHandler,\r\n  passwordInputHandler,\r\n  userName,\r\n  password,\r\n  setUserExists,\r\n  setUserName,\r\n  setPassword,\r\n}) {\r\n  // useEffect(() => {\r\n  //   setUserName(\"\");\r\n  //   setPassword(\"\");\r\n  // }, []);\r\n\r\n  const onClickHandler = async () => {\r\n    const user = {\r\n      name: userName,\r\n      password: password,\r\n    };\r\n    if (userName === \"\" || password === \"\") {\r\n      console.log(\"Username and password required\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post(\"/api/user/login\", user);\r\n      setUserExists(true);\r\n      console.log(\"success logging in\");\r\n    } catch (error) {\r\n      console.log(\"error invalid user\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"login-title\">Welcome to the best Trivia ever </h1>\r\n      <h2>Login into your account</h2>\r\n      <div id=\"login-container-div\">\r\n        <input\r\n          className=\"username-input-login\"\r\n          type=\"text\"\r\n          placeholder=\"Enter user name\"\r\n          onChange={(e) => userInputHandler(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          className=\"password-input-login\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          onChange={(e) => passwordInputHandler(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <Button\r\n          onClick={onClickHandler}\r\n          id=\"login-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Login\r\n        </Button>\r\n        <div>\r\n          <span>Don't have a user yet? Register now </span>\r\n        </div>\r\n        <Link to=\"/register\">\r\n          <Button\r\n            className=\"login-register-button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home({ setUserExists, setNewUser, userName }) {\r\n  const logoutHandler = async () => {\r\n    try {\r\n      await axios.post(\"/api/user/logout\");\r\n      setNewUser(false);\r\n      setUserExists(false);\r\n    } catch (error) {\r\n      console.log(\"error logout\");\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"home-container\">\r\n      <h1 id=\"main-title\">Trivia Game</h1>\r\n      <div id=\"login-container\">\r\n        <Link to=\"/game\">\r\n          <Button className=\"start-game-button\" variant=\"contained\">\r\n            Start Game\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/scoreboard\">\r\n          <Button\r\n            className=\"scoreboard-button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Scoreboard\r\n          </Button>\r\n        </Link>\r\n\r\n        <Button\r\n          onClick={logoutHandler}\r\n          className=\"scoreboard-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function UserRow({ user, index }) {\r\n  return (\r\n    <div className=\"user-row\">\r\n      <span className=\"scoreboard-index\">{index + 1}.</span>\r\n      <span className=\"scoreboard-username\">{user.name}</span>\r\n      <span className=\"scoreboard-score\">{user.score}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserRow from \"./UserRow\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Scoreboard() {\r\n  const [scoreboard, setScoreboard] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/trivia/scoreboard\");\r\n        setScoreboard(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div id=\"scoreboard-container\">\r\n      <h1 id=\"scoreboard-title\">Scoreboard</h1>\r\n      {scoreboard.map((user, i) => {\r\n        return <UserRow index={i} key={`UserRow-${i}`} user={user} />;\r\n      })}\r\n      <div id=\"div-scoreboard-button\">\r\n        <Link to=\"/\">\r\n          <Button\r\n            id=\"scoreboard-home-button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Home\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const base64 = require(\"base-64\");\r\nconst utf8 = require(\"utf8\");\r\n\r\nexport default function decrypter(str) {\r\n  const bytes = base64.decode(str);\r\n  const text = utf8.decode(bytes);\r\n  return text;\r\n}\r\n","import React from \"react\";\r\nimport decypter from \"../Utils/decypter\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    backgroundColor: \"#3f51b5\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: \"white\",\r\n    padding: \"0 30px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    marginTop: \"1em\",\r\n    fontSize: \"1.5em\",\r\n    minWidth: \"10em\",\r\n    height: \"fit-content\",\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n})(Button);\r\n\r\nexport default function Answer({\r\n  answer,\r\n  answerClickEvent,\r\n  isAnswerVisible,\r\n  question,\r\n  disableButtons,\r\n}) {\r\n  return (\r\n    <div className=\"option-div\">\r\n      <StyledButton\r\n        onClick={(e) => answerClickEvent(e.target.innerText)}\r\n        variant=\"contained\"\r\n        disabled={disableButtons}\r\n      >\r\n        {answer.option}\r\n      </StyledButton>\r\n      <div className=\"answer\">\r\n        {isAnswerVisible && question.user.allAnswers.length === 4\r\n          ? decypter(answer.answer)\r\n          : isAnswerVisible &&\r\n            question.user.allAnswers.length === 2 &&\r\n            question.saved == null\r\n          ? decypter(answer.answer) + \" \" + answer.country\r\n          : isAnswerVisible &&\r\n            question.user.allAnswers.length === 2 &&\r\n            question.saved\r\n          ? decypter(answer.answer)\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Question({ question }) {\r\n  return (\r\n    <div>\r\n      {question.user ? <h1 id=\"question\">{question.user.question}</h1> : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport decypter from \"../Utils/decypter\";\r\n\r\nexport default function Grading({\r\n  onRateOrSkipClicking,\r\n  question,\r\n  questionNumber,\r\n  setRatedNewQuestions,\r\n  ratedNewQuestions,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const questionToSave = Object.assign({}, question);\r\n  const onRateHandler = async () => {\r\n    if ((questionNumber - 1) % 3 === 0) {\r\n      try {\r\n        await axios.patch(\"/api/trivia/update\", questionToSave);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      const temp = [...ratedNewQuestions];\r\n      temp.push(questionToSave);\r\n      setRatedNewQuestions(temp);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (value !== 0) {\r\n      questionToSave.answer = decypter(questionToSave.answer);\r\n      if (questionToSave.user.allAnswers.length === 4) {\r\n        questionToSave.user.allAnswers[0].answer = decypter(\r\n          questionToSave.user.allAnswers[0].answer\r\n        );\r\n        questionToSave.user.allAnswers[1].answer = decypter(\r\n          questionToSave.user.allAnswers[1].answer\r\n        );\r\n        questionToSave.user.allAnswers[2].answer = decypter(\r\n          questionToSave.user.allAnswers[2].answer\r\n        );\r\n        questionToSave.user.allAnswers[3].answer = decypter(\r\n          questionToSave.user.allAnswers[3].answer\r\n        );\r\n      } else {\r\n        questionToSave.user.allAnswers[0].answer = decypter(\r\n          questionToSave.user.allAnswers[0].answer\r\n        );\r\n        questionToSave.user.allAnswers[1].answer = decypter(\r\n          questionToSave.user.allAnswers[1].answer\r\n        );\r\n      }\r\n      questionToSave.grade = value;\r\n      onRateHandler();\r\n      onRateOrSkipClicking();\r\n    }\r\n  }, [value]);\r\n  return (\r\n    <div id=\"rating-background\">\r\n      <div id=\"rating-container\">\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n          <Typography id=\"rate-question\" component=\"legend\">\r\n            Rate Question:\r\n          </Typography>\r\n          <Rating\r\n            id=\"stars\"\r\n            size=\"large\"\r\n            name=\"simple-controlled\"\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n          />\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={onRateOrSkipClicking}\r\n          id=\"skip-button\"\r\n        >\r\n          Skip\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport decypter from \"../Utils/decypter\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nexport default function LifeSaver({\r\n  question,\r\n  setLifeSaver,\r\n  lifeSaver,\r\n  setQuestion,\r\n  setCounter,\r\n  disableSaveButton,\r\n  setProgress,\r\n  counter,\r\n  prevCounter,\r\n}) {\r\n  const length = question.user ? question.user.allAnswers.length : null;\r\n\r\n  const removeFromAnswers = () => {\r\n    const temp = Object.assign({}, question);\r\n    const tempAnswers = temp.user.allAnswers.map((answer) => {\r\n      return answer.option;\r\n    });\r\n    const answer = decypter(temp.answer);\r\n\r\n    const index = tempAnswers.findIndex((option) => String(option) === answer);\r\n    const indexes = [];\r\n    while (indexes.length < 2) {\r\n      const tempIndex = Math.floor(Math.random() * 4);\r\n      if (tempIndex !== index && !indexes.includes(tempIndex)) {\r\n        indexes.push(tempIndex);\r\n      }\r\n    }\r\n\r\n    indexes.sort((a, b) => {\r\n      return a - b;\r\n    });\r\n    temp.user.allAnswers.splice(indexes[0], 1);\r\n    indexes.shift();\r\n    temp.user.allAnswers.splice(indexes[0] - 1, 1);\r\n    temp.saved = true;\r\n    setQuestion(temp);\r\n  };\r\n\r\n  const onClickHandler = () => {\r\n    setCounter((prev) => (prev += 10));\r\n    setProgress(\r\n      (prev) =>\r\n        (prev += 20 * (100 / (prevCounter * 2))) + 100 / (prevCounter * 2)\r\n    );\r\n    setLifeSaver((prev) => prev - 1);\r\n    removeFromAnswers();\r\n  };\r\n\r\n  return (\r\n    <div id=\"life-saver-container\">\r\n      {lifeSaver > 0 ? (\r\n        <div className=\"life-saver-message\">\r\n          you have {lifeSaver} life savers\r\n        </div>\r\n      ) : (\r\n        <div className=\"life-saver-message\">You used two life savers</div>\r\n      )}\r\n      {length === 4 && lifeSaver > 0 ? (\r\n        <Button\r\n          disabled={disableSaveButton}\r\n          variant=\"contained\"\r\n          onClick={() => onClickHandler()}\r\n          id=\"life-saver-button\"\r\n        >\r\n          <HelpIcon />\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"45%\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function LinearDeterminate({\r\n  counter,\r\n  prevCounter,\r\n  progress,\r\n  setProgress,\r\n}) {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setProgress((prev) => prev - 100 / (prevCounter * 2));\r\n  }, [counter, prevCounter]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        style={{ height: \"2vh\", borderRadius: \"5px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport decypter from \"../Utils/decypter\";\r\nimport axios from \"axios\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Question\";\r\nimport Grading from \"./Grading\";\r\nimport LifeSaver from \"./LifeSaver\";\r\nimport LinearDeterminate from \"./LinearDeterminate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nexport default function Game({ userName }) {\r\n  const [questionNumber, setQuestionNumber] = useState(1);\r\n  const [question, setQuestion] = useState({});\r\n  const [counter, setCounter] = useState(20);\r\n  const [isRatingVisible, setIsRatingVisible] = useState(false);\r\n  const [isAnswerVisible, setIsAnswerVisible] = useState(false);\r\n  const [skipOrRate, setSkipOrRate] = useState(0);\r\n  const [prevCounter, setPrevCounter] = useState(20);\r\n  const [lives, setLives] = useState(3);\r\n  const [disableButtons, setDisableButtons] = useState(false);\r\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\r\n  const [gameScore, setGameScore] = useState(0);\r\n  const [lifeSaver, setLifeSaver] = useState(2);\r\n\r\n  const [currentQuestionIdArray, setCurrentQuestionIdArray] = useState([]);\r\n  const [allSavedQuestionsId, setAllSavedQuestionsId] = useState([]);\r\n\r\n  const [ratedNewQuestions, setRatedNewQuestions] = useState([]);\r\n  const [progress, setProgress] = useState(100);\r\n\r\n  useEffect(() => {\r\n    if (counter === 0) {\r\n      setIsAnswerVisible(true);\r\n      setIsRatingVisible(true);\r\n      setDisableButtons(true);\r\n      setDisableSaveButton(true);\r\n      setLives((prev) => prev - 1);\r\n    } else {\r\n      const timer =\r\n        counter > 0 && setInterval(() => setCounter(counter - 0.5), 500);\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const num = Math.floor(Math.random() * 3) + 1;\r\n      const res = await axios.get(`/api/trivia/type${num}`);\r\n      setQuestion(res.data);\r\n\r\n      const allSaved = await axios.get(\"/api/trivia/all-saved-questions\");\r\n      const allId = allSaved.data.map((question) => {\r\n        return question.id;\r\n      });\r\n      setAllSavedQuestionsId(allId);\r\n    })();\r\n  }, []);\r\n\r\n  const answerClickEvent = (value) => {\r\n    const answer = decypter(question.answer);\r\n    if (answer === value) {\r\n      setDisableButtons(true);\r\n      const timeItTookToAnswer = prevCounter - counter;\r\n      const score = Math.floor(\r\n        (1 - timeItTookToAnswer / prevCounter) * 70 + 30\r\n      );\r\n\r\n      if (question.saved === true) {\r\n        setGameScore((prev) => (prev += 30));\r\n      } else {\r\n        setGameScore((prev) => (prev += score));\r\n      }\r\n    } else {\r\n      setDisableButtons(true);\r\n      setLives((prev) => prev - 1);\r\n    }\r\n    setCounter(\"\");\r\n    setIsAnswerVisible(true);\r\n    setIsRatingVisible(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setQuestionNumber((prev) => (prev += 1));\r\n\r\n    (async () => {\r\n      if (allSavedQuestionsId.length === currentQuestionIdArray.length) {\r\n        const num = Math.floor(Math.random() * 3) + 1;\r\n        const res = await axios.get(`/api/trivia/type${num}`);\r\n        setQuestion(res.data);\r\n        setDisableButtons(false);\r\n      } else {\r\n        if (questionNumber % 3 === 0) {\r\n          let res = await axios.get(`/api/trivia/saved-question`);\r\n          while (currentQuestionIdArray.includes(res.data.id)) {\r\n            res = await axios.get(`/api/trivia/saved-question`);\r\n            if (!currentQuestionIdArray.includes(res.data.id)) {\r\n              break;\r\n            }\r\n          }\r\n          const questionId = res.data.id;\r\n          const temp = [...currentQuestionIdArray];\r\n          temp.push(questionId);\r\n          setCurrentQuestionIdArray(temp);\r\n          setQuestion(res.data);\r\n          setDisableButtons(false);\r\n        } else {\r\n          const num = Math.floor(Math.random() * 3) + 1;\r\n          const res = await axios.get(`/api/trivia/type${num}`);\r\n          setQuestion(res.data);\r\n          setDisableButtons(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [skipOrRate]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (lives === 0) {\r\n        try {\r\n          const savedUser = await axios.post(\"/api/user/getuser\", {\r\n            name: userName,\r\n          });\r\n          console.log(savedUser.data);\r\n          const user = {\r\n            name: savedUser.data.name,\r\n            id: savedUser.data.id,\r\n            score: gameScore,\r\n          };\r\n          await axios.post(\"/api/user/score\", user);\r\n          await axios.post(\"/api/trivia/new\", ratedNewQuestions);\r\n        } catch (error) {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    })();\r\n  }, [lives]);\r\n\r\n  const onRateOrSkipClicking = () => {\r\n    setSkipOrRate((prev) => prev + 1);\r\n    setIsAnswerVisible(false);\r\n    setIsRatingVisible(false);\r\n    setDisableSaveButton(false);\r\n    setProgress(100);\r\n    if (prevCounter === 5) {\r\n      setCounter(5);\r\n    } else {\r\n      setCounter(prevCounter - 0.5);\r\n      setPrevCounter((prev) => (prev -= 0.5));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {lives === 0 ? (\r\n        <div>\r\n          <div id=\"end-game-user\">{userName}</div>\r\n          <div id=\"game-score\">{gameScore} - Points</div>\r\n          <div id=\"end-game-button-container\">\r\n            <Link to=\"/scoreboard\">\r\n              <Button\r\n                id=\"game-scoreboard-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Scoreboard\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <Button id=\"new-game-button\" variant=\"contained\">\r\n                New Game\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div id=\"lives\">\r\n            {lives === 3 ? (\r\n              <div>\r\n                {\" \"}\r\n                <FavoriteIcon /> <FavoriteIcon /> <FavoriteIcon />\r\n              </div>\r\n            ) : lives === 2 ? (\r\n              <div>\r\n                {\" \"}\r\n                <FavoriteIcon /> <FavoriteIcon />\r\n              </div>\r\n            ) : lives === 1 ? (\r\n              <div>\r\n                <FavoriteIcon />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <Question question={question} />\r\n          <div id=\"timer\">{Math.round(counter)}</div>\r\n          <LinearDeterminate\r\n            counter={counter}\r\n            prevCounter={prevCounter}\r\n            progress={progress}\r\n            setProgress={setProgress}\r\n          />\r\n          <LifeSaver\r\n            question={question}\r\n            setLifeSaver={setLifeSaver}\r\n            lifeSaver={lifeSaver}\r\n            setQuestion={setQuestion}\r\n            setCounter={setCounter}\r\n            disableSaveButton={disableSaveButton}\r\n            setProgress={setProgress}\r\n            prevCounter={prevCounter}\r\n            counter={counter}\r\n          />\r\n          {question.user &&\r\n            question.user.allAnswers.map((answer, i) => {\r\n              return (\r\n                <Answer\r\n                  key={`answer key ${i}`}\r\n                  answer={answer}\r\n                  answerClickEvent={answerClickEvent}\r\n                  isAnswerVisible={isAnswerVisible}\r\n                  question={question}\r\n                  disableButtons={disableButtons}\r\n                />\r\n              );\r\n            })}\r\n          {isRatingVisible ? (\r\n            <Grading\r\n              onRateOrSkipClicking={onRateOrSkipClicking}\r\n              question={question}\r\n              setSkipOrRate={setSkipOrRate}\r\n              questionNumber={questionNumber}\r\n              setRatedNewQuestions={setRatedNewQuestions}\r\n              ratedNewQuestions={ratedNewQuestions}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      )}\r\n      <div id=\"game-home-button-div\">\r\n        <Link to=\"/\">\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Home\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>404 Page Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Home from \"./Home\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Game from \"./Game\";\r\nimport NotFound from \"./NotFound\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport default function Main() {\r\n  const [userExists, setUserExists] = useState(false);\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const userInputHandler = (value) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  const passwordInputHandler = (value) => {\r\n    setPassword(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {userExists ? (\r\n              <Redirect to=\"/home\" />\r\n            ) : (\r\n              <Login\r\n                userInputHandler={userInputHandler}\r\n                passwordInputHandler={passwordInputHandler}\r\n                userName={userName}\r\n                password={password}\r\n                setUserExists={setUserExists}\r\n                setUserName={setUserName}\r\n                setPassword={setPassword}\r\n              />\r\n            )}\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            {newUser ? (\r\n              <Redirect to=\"/home\" />\r\n            ) : (\r\n              <Register\r\n                userInputHandler={userInputHandler}\r\n                passwordInputHandler={passwordInputHandler}\r\n                userName={userName}\r\n                password={password}\r\n                setNewUser={setNewUser}\r\n                setUserExists={setUserExists}\r\n                setUserName={setUserName}\r\n                setPassword={setPassword}\r\n              />\r\n            )}\r\n          </Route>\r\n          <Route exact path=\"/home\">\r\n            {userExists ? (\r\n              <Home\r\n                setUserName={setUserName}\r\n                setPassword={setPassword}\r\n                setNewUser={setNewUser}\r\n                setUserExists={setUserExists}\r\n                userName={userName}\r\n              />\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )}\r\n          </Route>\r\n          <Route exact path=\"/scoreboard\">\r\n            <Scoreboard />\r\n          </Route>\r\n          <Route exact path=\"/game\">\r\n            <Game userName={userName} />\r\n          </Route>\r\n          <Route path=\"/\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}